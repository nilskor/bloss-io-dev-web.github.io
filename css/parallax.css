
/** NOTICE:
 *
 * Do NOT pollute or cross-contaminate styles between components on the page.
 *
 * Better to have all attributes / properties belonging to an element / component
 * in one place than scattered or mixed-in or intertwined.
 *
 * The 'display' property cannot be animated.
 *
 */

/** GLOBALS -------------------------------------------------------------------------------------------------
 *
 *  Use the root object to park any global variables. 
 */
/** Reminder: The 'display' property cannot be animated. */

:root
{
    --magicNumber: 0; 
}

/** Component Parallax - more a method than a true component.
 *
 * This works by virtue of the 'magicNumber'.
 *
 * Simply a variable to hold the current state of the scrolled window
 * position in y co-ordinates. We could've written 'y-scroll-position'
 * or 'viewport-y-position' but that seemed .. tremendously boring :)
 */

/** 
 * Note: every element must have it's own unique className
 * registered here, otherwise one class will control multiple
 * elements.
 * Of course, this is ok if that's intended, but if you need'
 * individual elements to do different things, then you will
 * need unique class names below.
 */

/** any css property can be manipulated with a calculation using the magicNumber */
.doParallax
{
    --multiplier      : 0.3;
    transform         : translateY( calc( var( --magicNumber ) * var( --multiplier ) * 1px ) );
    -webkit-transform : translateY( calc( var( --magicNumber ) * var( --multiplier ) * 1px ) );
    will-change       : auto;
}

/** any css property can be manipulated with a calculation using the magicNumber */
.doParallax2
{
     --multiplier: -0.2;
        transform: translateX( calc( var( --magicNumber ) * var( --multiplier ) * 1px ) );
      will-change: auto;
}
